@model Movie_Mania.Resources.MovieResources

@{
    ViewBag.Title = "EditMovie";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";


}



@using (Html.BeginForm("EditMovie", "Movie", FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()
    <div class="page-header" style="padding-left:40px">

        <div class="page-title">
            <h4>Edit Movie</h4>
            <h6>Update Movie</h6>
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.ImagePath)

    <br />

    <div class="card" style="padding-left:20px">


        <div class="card-body">
            <div class="row">
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label>Movie </label>
                    </div>
                    @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { style = "color: black;" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label>Release Date</label>
                    </div>
                    @Html.TextBoxFor(model => model.ReleaseDate, "{0:yyyy-MM-dd}", new { style = "color: black;", placeholder = "YYYY-MM-DD" })

                    @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                </div>

                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label>Ticket Price</label>
                    </div>
                    @Html.TextBoxFor(model => model.TicketPrice, new { htmlAttributes = new { style = "color: black" } })
                    @Html.ValidationMessageFor(model => model.TicketPrice, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-3 col-sm-6 col-12">
                    <div class="form-group">
                        <label>Country</label>
                    </div>
                    @Html.TextBoxFor(model => model.Country, new { htmlAttributes = new { style = "color: black" } })
                    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">

                <div class="col-lg-3 col-sm-6 col-12">

                    <div class="form-group">
                        <label>Genres</label>
                    </div>

                    <div style="display:flex;gap:10px">
                        @for (int i = 0; i < Model.SelectedGenres.Count(); i++)
                        {
                            <div>
                                <label style="display:flex">
                                    @Html.HiddenFor(model => model.SelectedGenres[i].genreid)
                                    @Html.HiddenFor(model => model.SelectedGenres[i].name)
                                    @Html.EditorFor(model => model.SelectedGenres[i].Selected)
                                    @Html.DisplayFor(model => model.SelectedGenres[i].name)
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col-lg-12">
                    <div class="form-group">
                        <label>Description</label>

                    </div>
                    @Html.TextAreaFor(model => model.Description, new { rows = 5, cols = 50 })

                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">

                <div class="col-lg-12">
                    <div class="form-group">
                        <div style="display:flex">
                            <label> Video url</label>
                        </div>
                        <div>

                            @Html.TextBoxFor(model => model.VideoPath, new { placeholder = "Paste Url..." })

                        </div>


                    </div>
                </div>
            </div>

            <div class="row">

                <div class="col-lg-12">
                    <div class="form-group">
                        <div style="display:flex">
                            <label>Image</label>
                        </div>
                        <div class="image-upload">
                            @if (!string.IsNullOrEmpty(Model.ImagePath))
                            {
                                <img src="@Url.Content(Model.ImagePath)" alt="Movie Image" class="img-fluid" />
                                <br />
                                <span>@Path.GetFileName(Model.ImagePath)</span>
                            }
                            @Html.TextBoxFor(model => model.Image, new { type = "file" })

                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group text-center">
                        <input type="submit" class="text-white" value="Update" style="background-color:#DE1002" />
                        <a href="@Url.Action("MovieList", "Movie")" style="color:#DE1002;text-decoration:none">Cancel</a>

                    </div>
                </div>
            </div>


        </div>
    </div>

}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}